#!/bin/bash
#
# xmonad startup script. Intended to be run from an xsession configuration
# to run xmonad and some associated programs.
#
# Author: David Brewer
# Repository: https://github.com/davidbrewer/xmonad-ubuntu-conf

#
# GENERAL INITIALIZATION
#

eval `dbus-launch --auto-syntax`

#ck-launch-session &

# # Identify the home of our gtkrc file, important for setting styles of
# # gtk-based applications
# export GTK2_RC_FILES="$HOME/.gtkrc-2.0"

# Load X resources
xrdb -merge ~/.Xresources

# # Start compositing to support transparency. You can omit this
# # if you prefer not to use any transparency, but it is likely to cause
# # ugly black fringing with some programs such as synapse that expect
# # transparency support.
# xcompmgr -n -d $DISPLAY &

# Start the xscreensaver daemon
xscreensaver -no-splash &

#
# SCREEN CONFIGURATION
#

# RIGHT_END_XMOBAR=0
#
# # We handle our screen configuration using xrandr.
# #
# # Note that you can run xrandr at the command line to get a list of your
# # connected screens and find out what names you should use to refer to them.
#
# # Activate primary screen
# xrandr --output LVDS --auto --primary
#
# # # If we find that a screen is connected via VGA, activate it and position it
# # # to the left of the primary screen.
# # xrandr | grep 'VGA-1 connected' | ifne xrandr --output VGA-1 --auto --left-of LVDS-1
# #
# # # If we find that a screen is connected via DVI, activate it and position it
# # # to the left of the primary screen.
# # xrandr | grep 'DP-1 connected' | ifne xrandr --output DP-1 --auto --left-of LVDS-1
#
# # If HDMI is connected, activate it and position it to the right of the primary screen
# #xrandr | grep 'HDMI-0 connected' | ifne xrandr --output HDMI-0 --auto --right-of LVDS
# HDMI=`xrandr | grep 'HDMI-0 connected' | wc -l`
# if [ $HDMI -ne 0 ]; then
# 	xrandr --output HDMI-0 --auto --right-of LVDS
# 	RIGHT_END_XMOBAR=`xrandr | grep 'HDMI-0' | cut -d ' ' -f 3 | cut -d x -f 1`
#
# 	# If DisplayPort is connected:
# 	#   * Deactivate LVDS
# 	#   * Make HDMI-0 primary screen
# 	#   * Activate DisplayPort-0 and position it to the right of HDMI-0
# 	DP=`xrandr | grep "DisplayPort-0 connected" | wc -l`
# 	if [ $DP -ne 0 ]; then
# 		xrandr --output LVDS --off
# 		xrandr --output HDMI-0 --auto --primary
# 		xrandr --output DisplayPort-0 --auto --right-of HDMI-0
# 		RIGHT_END_XMOBAR=`xrandr | grep "DisplayPort-0" | cut -d ' ' -f 3 | cut -d x -f 1`
# 	fi
# fi

# kurt @ Arr HQ
# If both HDMI and mDP are connected, use them
if [ $(hostname) == "kurt" ]; then
	HDMI1=`xrandr | grep 'HDMI1 connected' | wc -l`
	HDMI2=`xrandr | grep 'HDMI2 connected' | wc -l`
	if [ $HDMI1 -ne 0 -a $HDMI2 -ne 0 ]; then
		xrandr --output eDP1 --primary --mode 1600x900 --pos 0x0 --rotate normal
		xrandr --output HDMI1 --mode 1920x1080 --pos 1600x0 --rotate normal
		xrandr --output HDMI2 --mode 1920x1080 --pos 3520x0 --rotate normal
		xrandr --output DP1 --off
		xrandr --output VIRTUAL1 --off
	fi
fi


#
# LOAD SCREEN BACKGROUNDS
#

# # To set your backgrounds, run nitrogren /path/to/images
# nitrogen --restore &


#
# STARTUP ICON TRAY
#

# # We are using stalonetray to create a small icon tray at the
# # top right of the screen. You are likely to want to tweak the
# # size of the icons and the width of the tray based upon the
# # size of your screen and your xmobar configuration. The goal is
# # to make stalonetray look like it is part of xmobar.
# #
# # Line by line, the options used by default below mean:
# # - icons should be aligned with the "East" or right side of the tray
# # - the width of the tray should be 5 icons wide by one icon tall, and it
# #   should be located 0 pixels from the right of the screen (-0) and 0 pixels
# #   from the top of the screen (+0).
# # - By setting our maximum geometry to the same thing, the tray will not grow.
# # - The background color of the tray should be black.
# # - This program should not show up in any taskbar.
# # - Icons should be set to size "24".
# # - Kludges argument of "force_icons_size" forces all icons to really, truly
# #   be the size we set.
# # - window-strut "none" means windows are allowed to cover the tray. In
# #   other words, trust xmonad to handle this part.
# #
# stalonetray \
#   --icon-gravity E \
#   --geometry 5x1-$RIGHT_END_XMOBAR+0 \
#   --max-geometry 5x1-$RIGHT_END_MOBAR+0 \
#   --background '#000000' \
#   --skip-taskbar \
#   --icon-size 19 \
#   --kludges force_icons_size \
#   --window-strut none \
# &

# Run the gnome-keyring-daemon to avoid issues you otherwise may encounter
# when using gnome applications which expect access to the keyring, such
# as Empathy. This prevents prompts you may otherwise get for invalid
# certificates and the like.
#gnome-keyring-daemon --start --components=gpg,pkcs11,secrets,ssh

# Setup ssh-agent
pkill ssh-agent
eval `ssh-agent -s`
ssh-add ~/.ssh/id_rsa
ssh-add ~/.ssh/id_rsa_arr

# Now, finally, start xmonad
exec xmonad
